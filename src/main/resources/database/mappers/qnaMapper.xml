<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
   <mapper namespace="com.fw.s1.board.qna.QnaMapper">
   		<sql id="searcher">
   		<!-- 공통으로 사용하는 sql문 -->
   		<where>
				<choose>
					<when test="kind=='Writer'">
						writer like concat('%', #{search}, '%')
					</when>
					
					<when test="kind=='contents'">
						contents like concat('%', #{search}, '%')
					</when>
					
					<otherwise>
						title like concat('%', #{search}, '%')
					</otherwise>
				</choose>
			</where>
   		</sql>
   		
   		
   		<select id="getList" resultType="qnaVO" parameterType="Pager">
			select * from qna
			<include refid="searcher"></include>
			order by num desc
			limit #{startRow}, #{perPage}
			<!-- limit 시작index번호(0부터시작), 갯수 --> 
   		</select>
   		
   		<select id="getTotalCount" parameterType="Pager" resultType="java.lang.Long">
   			select count(num) from qna
   			<include refid="searcher"></include>
   		</select>
   		
   		<select id="getSelect" resultMap="selectResult" parameterType="BoardVO">
			SELECT N.*, NF.* from
			qna N left join qnaFiles NF
			on N.num = NF.num
			WHERE N.num=#{num}
   		</select>
   		
   		<resultMap type="qnaVO" id="selectResult">
   			<id column="num" property="num"/>
   			<result column="title" property="title"/>
   			<result column="writer" property="writer"/>
   			<result column="contents" property="contents"/>
   			<result column="regDate" property="regDate"/>
   			<result column="hit" property="hit"/>
   			<collection property="files" javaType="java.util.List" ofType="BoardFileVO">
   				<id column="filenum" property="fileNum"/>
   				<result column="fileName" property="fileName"/>
   				<result column="oriName" property="oriName"/>
   			</collection>
   		</resultMap>
   		
   		<update id="setHitUpdate" parameterType="BoardVO">
   			update qna set hit=hit+1 where num=#{num}
   		</update>
   		
   		<insert id="setInsert" parameterType="BoardVO" useGeneratedKeys="true" keyProperty="num">
   			insert into qna (title,writer,contents,regDate,hit)
   			values(#{title}, #{writer},#{contents}, now(), 0)
   		</insert>
   		
   		<insert id="setFileInsert" parameterType="BoardFileVO">
   			insert into qnaFiles (num, filename, oriname)
   			values (#{num}, #{fileName}, #{oriName})
   		</insert>
   		
   		<update id="setUpdate" parameterType="BoardVO" useGeneratedKeys="true" keyProperty="num">
   			update qna set title=#{title}, contents=#{contents} where num=#{num}
   		</update>
   		
   		<delete id="setDelete" parameterType="BoardVO">
   			SET foreign_key_checks = 0;
			delete from qna where num=#{num};
			delete from qnafiles where num=#{num};
			delete from qnacomment where num=#{num};
			SET foreign_key_checks = 1
   		</delete>
   		
   		<insert id="commentInsert" parameterType="BoardCommentVO">
   			insert into qnaComment (writer, regDate, contents, num)
   			values (#{writer}, now(), #{contents}, #{num})
   		</insert>
   		
   		<select id="commentList" parameterType="BoardCommentVO" resultType="BoardCommentVO">
			select * from qnaComment where num=#{num}
   		</select>
   		
   		<select id="commentSelect" parameterType="BoardCommentVO" resultType="BoardCommentVO">
			select * from qnaComment where commentNum=#{commentNum}
   		</select>
   		
   		<update id="commentUpdate" parameterType="BoardCommentVO">
   			update qnaComment set contents=#{contents}, regDate=now() where commentNum=#{commentNum}
   		</update>
   		
   		<delete id="commentDelete" parameterType="BoardCommentVO">
   			delete from qnaComment where commentNum=#{commentNum}
   		</delete>
   		
   		<!-- member -->
   		<select id="getMemberBoardList" parameterType="MemberVO" resultType="QnaVO">
   			select R.num, (select  null) productNum, R.title, R.writer, R.regDate, R.hit, R.contents, R.typeNum from review R
			where R.writer = #{username}
			union
			select Q.* from qna Q
			where Q.writer = #{username}
			order by regDate desc
   		</select>
   
   </mapper>
    